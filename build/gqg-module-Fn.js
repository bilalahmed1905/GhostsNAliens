"use strict";
/*
 * Copyright 2020 Carson Cheng
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
// What is this and why?  Because CORS prevent use of modules locally:
// https://stackoverflow.com/questions/50197495/javascript-modules-and-cors
const exportedNames = [
    "PLAYGROUND_HEIGHT",
    "PLAYGROUND_WIDTH",
    "consolePrint",
    "createCircle",
    "createCircleInGroup",
    "createContainerIterator",
    "createGraph",
    "createGraphInGroup",
    "createGraphWithOptions",
    "createGroupInPlayground",
    "createInterpolatedGraph",
    "createInterpolatedGraphInGroup",
    "createLine",
    "createLineInGroup",
    "createOval",
    "createOvalInGroup",
    "createRect",
    "createRectInGroup",
    "createSpriteInGroup",
    "createTextInputSpriteInGroup",
    "createTextSpriteInGroup",
    "currentDate",
    "deleteSavedDictionary",
    "disableContextMenu",
    "drawCircle",
    "drawGraph",
    "drawInterpolatedGraph",
    "drawLine",
    "drawOval",
    "drawRect",
    "enableContextMenu",
    "forEachSpriteSpriteCollisionDo",
    "forEach2SpritesHit",
    "when2SpritesHit",
    "forEachSpriteFilteredCollisionDo",
    "forEachSpriteFilteredHit",
    "forEachSpriteGroupCollisionDo",
    "forEachSpriteGroupHit",
    "getKeyState",
    "getMouseButton1",
    "getMouseButton2",
    "getMouseButton3",
    "getMouseX",
    "getMouseY",
    "getSavedDictionary",
    "hideMouseCursor",
    "newGQAnimation",
    "removeSprite",
    "saveDictionaryAs",
    "setGqDebugFlag",
    "setGqPlaygroundDimensions",
    "showMouseCursor",
    "sprite",
    "spriteExists",
    "spriteGetHeight",
    "spriteGetWidth",
    "spriteGetX",
    "spriteGetY",
    "spriteGetZ",
    "spriteGroupNameFormatIsValid",
    "spriteHitDir",
    "spriteHitDirection",
    "spriteId",
    "spriteObject",
    "spritePauseAnimation",
    "spriteResumeAnimation",
    "spriteRotate",
    "spriteScale",
    "spriteSetAnimation",
    "spriteSetHeight",
    "spriteSetWidth",
    "spriteSetWidthHeight",
    "spriteSetX",
    "spriteSetXY",
    "spriteSetXYZ",
    "spriteSetY",
    "spriteSetZ",
    "textInputSpriteReset",
    "textInputSpriteSetHandler",
    "textInputSpriteSetString",
    "textInputSpriteString",
    "textInputSpriteSubmitted",
    "throwOnImgLoadError",
    "ANIMATION_HORIZONTAL",
    "ANIMATION_VERTICAL",
    "ANIMATION_ONCE",
    "ANIMATION_PINGPONG",
    "ANIMATION_CALLBACK",
    "ANIMATION_MULTI"
];
const Fn = {};
for (let x of exportedNames) {
    Fn[x] = eval(x);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3FnLW1vZHVsZS1Gbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdxZy1tb2R1bGUtRm4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7OztHQUtHO0FBRUgsc0VBQXNFO0FBQ3RFLDJFQUEyRTtBQUUzRSxNQUFNLGFBQWEsR0FBRztJQUNsQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLGdDQUFnQztJQUNoQyxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsOEJBQThCO0lBQzlCLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1osV0FBVztJQUNYLHVCQUF1QjtJQUN2QixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsZ0NBQWdDO0lBQ2hDLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsa0NBQWtDO0lBQ2xDLDBCQUEwQjtJQUMxQiwrQkFBK0I7SUFDL0IsdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsV0FBVztJQUNYLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtJQUMzQixpQkFBaUI7SUFDakIsUUFBUTtJQUNSLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLDhCQUE4QjtJQUM5QixjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLFVBQVU7SUFDVixjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixjQUFjO0lBQ2QsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLGNBQWM7SUFDZCxZQUFZO0lBQ1osWUFBWTtJQUNaLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0IsMEJBQTBCO0lBQzFCLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixvQkFBb0I7SUFDcEIsaUJBQWlCO0NBQ3BCLENBQUM7QUFFRixNQUFNLEVBQUUsR0FBd0IsRUFBRSxDQUFDO0FBQ25DLEtBQUssSUFBSSxDQUFDLElBQUksYUFBYSxFQUFFO0lBQ3pCLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Q0FDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjAgQ2Fyc29uIENoZW5nXG4gKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cHM6Ly9tb3ppbGxhLm9yZy9NUEwvMi4wLy5cbiAqL1xuXG4vLyBXaGF0IGlzIHRoaXMgYW5kIHdoeT8gIEJlY2F1c2UgQ09SUyBwcmV2ZW50IHVzZSBvZiBtb2R1bGVzIGxvY2FsbHk6XG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81MDE5NzQ5NS9qYXZhc2NyaXB0LW1vZHVsZXMtYW5kLWNvcnNcblxuY29uc3QgZXhwb3J0ZWROYW1lcyA9IFtcbiAgICBcIlBMQVlHUk9VTkRfSEVJR0hUXCIsXG4gICAgXCJQTEFZR1JPVU5EX1dJRFRIXCIsXG4gICAgXCJjb25zb2xlUHJpbnRcIixcbiAgICBcImNyZWF0ZUNpcmNsZVwiLFxuICAgIFwiY3JlYXRlQ2lyY2xlSW5Hcm91cFwiLFxuICAgIFwiY3JlYXRlQ29udGFpbmVySXRlcmF0b3JcIixcbiAgICBcImNyZWF0ZUdyYXBoXCIsXG4gICAgXCJjcmVhdGVHcmFwaEluR3JvdXBcIixcbiAgICBcImNyZWF0ZUdyYXBoV2l0aE9wdGlvbnNcIixcbiAgICBcImNyZWF0ZUdyb3VwSW5QbGF5Z3JvdW5kXCIsXG4gICAgXCJjcmVhdGVJbnRlcnBvbGF0ZWRHcmFwaFwiLFxuICAgIFwiY3JlYXRlSW50ZXJwb2xhdGVkR3JhcGhJbkdyb3VwXCIsXG4gICAgXCJjcmVhdGVMaW5lXCIsXG4gICAgXCJjcmVhdGVMaW5lSW5Hcm91cFwiLFxuICAgIFwiY3JlYXRlT3ZhbFwiLFxuICAgIFwiY3JlYXRlT3ZhbEluR3JvdXBcIixcbiAgICBcImNyZWF0ZVJlY3RcIixcbiAgICBcImNyZWF0ZVJlY3RJbkdyb3VwXCIsXG4gICAgXCJjcmVhdGVTcHJpdGVJbkdyb3VwXCIsXG4gICAgXCJjcmVhdGVUZXh0SW5wdXRTcHJpdGVJbkdyb3VwXCIsXG4gICAgXCJjcmVhdGVUZXh0U3ByaXRlSW5Hcm91cFwiLFxuICAgIFwiY3VycmVudERhdGVcIixcbiAgICBcImRlbGV0ZVNhdmVkRGljdGlvbmFyeVwiLFxuICAgIFwiZGlzYWJsZUNvbnRleHRNZW51XCIsXG4gICAgXCJkcmF3Q2lyY2xlXCIsXG4gICAgXCJkcmF3R3JhcGhcIixcbiAgICBcImRyYXdJbnRlcnBvbGF0ZWRHcmFwaFwiLFxuICAgIFwiZHJhd0xpbmVcIixcbiAgICBcImRyYXdPdmFsXCIsXG4gICAgXCJkcmF3UmVjdFwiLFxuICAgIFwiZW5hYmxlQ29udGV4dE1lbnVcIixcbiAgICBcImZvckVhY2hTcHJpdGVTcHJpdGVDb2xsaXNpb25Eb1wiLFxuICAgIFwiZm9yRWFjaDJTcHJpdGVzSGl0XCIsXG4gICAgXCJ3aGVuMlNwcml0ZXNIaXRcIixcbiAgICBcImZvckVhY2hTcHJpdGVGaWx0ZXJlZENvbGxpc2lvbkRvXCIsXG4gICAgXCJmb3JFYWNoU3ByaXRlRmlsdGVyZWRIaXRcIixcbiAgICBcImZvckVhY2hTcHJpdGVHcm91cENvbGxpc2lvbkRvXCIsXG4gICAgXCJmb3JFYWNoU3ByaXRlR3JvdXBIaXRcIixcbiAgICBcImdldEtleVN0YXRlXCIsXG4gICAgXCJnZXRNb3VzZUJ1dHRvbjFcIixcbiAgICBcImdldE1vdXNlQnV0dG9uMlwiLFxuICAgIFwiZ2V0TW91c2VCdXR0b24zXCIsXG4gICAgXCJnZXRNb3VzZVhcIixcbiAgICBcImdldE1vdXNlWVwiLFxuICAgIFwiZ2V0U2F2ZWREaWN0aW9uYXJ5XCIsXG4gICAgXCJoaWRlTW91c2VDdXJzb3JcIixcbiAgICBcIm5ld0dRQW5pbWF0aW9uXCIsXG4gICAgXCJyZW1vdmVTcHJpdGVcIixcbiAgICBcInNhdmVEaWN0aW9uYXJ5QXNcIixcbiAgICBcInNldEdxRGVidWdGbGFnXCIsXG4gICAgXCJzZXRHcVBsYXlncm91bmREaW1lbnNpb25zXCIsXG4gICAgXCJzaG93TW91c2VDdXJzb3JcIixcbiAgICBcInNwcml0ZVwiLFxuICAgIFwic3ByaXRlRXhpc3RzXCIsXG4gICAgXCJzcHJpdGVHZXRIZWlnaHRcIixcbiAgICBcInNwcml0ZUdldFdpZHRoXCIsXG4gICAgXCJzcHJpdGVHZXRYXCIsXG4gICAgXCJzcHJpdGVHZXRZXCIsXG4gICAgXCJzcHJpdGVHZXRaXCIsXG4gICAgXCJzcHJpdGVHcm91cE5hbWVGb3JtYXRJc1ZhbGlkXCIsXG4gICAgXCJzcHJpdGVIaXREaXJcIixcbiAgICBcInNwcml0ZUhpdERpcmVjdGlvblwiLFxuICAgIFwic3ByaXRlSWRcIixcbiAgICBcInNwcml0ZU9iamVjdFwiLFxuICAgIFwic3ByaXRlUGF1c2VBbmltYXRpb25cIixcbiAgICBcInNwcml0ZVJlc3VtZUFuaW1hdGlvblwiLFxuICAgIFwic3ByaXRlUm90YXRlXCIsXG4gICAgXCJzcHJpdGVTY2FsZVwiLFxuICAgIFwic3ByaXRlU2V0QW5pbWF0aW9uXCIsXG4gICAgXCJzcHJpdGVTZXRIZWlnaHRcIixcbiAgICBcInNwcml0ZVNldFdpZHRoXCIsXG4gICAgXCJzcHJpdGVTZXRXaWR0aEhlaWdodFwiLFxuICAgIFwic3ByaXRlU2V0WFwiLFxuICAgIFwic3ByaXRlU2V0WFlcIixcbiAgICBcInNwcml0ZVNldFhZWlwiLFxuICAgIFwic3ByaXRlU2V0WVwiLFxuICAgIFwic3ByaXRlU2V0WlwiLFxuICAgIFwidGV4dElucHV0U3ByaXRlUmVzZXRcIixcbiAgICBcInRleHRJbnB1dFNwcml0ZVNldEhhbmRsZXJcIixcbiAgICBcInRleHRJbnB1dFNwcml0ZVNldFN0cmluZ1wiLFxuICAgIFwidGV4dElucHV0U3ByaXRlU3RyaW5nXCIsXG4gICAgXCJ0ZXh0SW5wdXRTcHJpdGVTdWJtaXR0ZWRcIixcbiAgICBcInRocm93T25JbWdMb2FkRXJyb3JcIixcbiAgICBcIkFOSU1BVElPTl9IT1JJWk9OVEFMXCIsXG4gICAgXCJBTklNQVRJT05fVkVSVElDQUxcIixcbiAgICBcIkFOSU1BVElPTl9PTkNFXCIsXG4gICAgXCJBTklNQVRJT05fUElOR1BPTkdcIixcbiAgICBcIkFOSU1BVElPTl9DQUxMQkFDS1wiLFxuICAgIFwiQU5JTUFUSU9OX01VTFRJXCJcbl07XG5cbmNvbnN0IEZuOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge307XG5mb3IgKGxldCB4IG9mIGV4cG9ydGVkTmFtZXMpIHtcbiAgICBGblt4XSA9IGV2YWwoeCk7XG59XG4iXX0=